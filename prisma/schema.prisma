// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  engineType = "library"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  directUrl    = env("DIRECT_URL")
  relationMode = "prisma"
}

model User {
  id             String    @id @unique
  username       String    @unique
  name           String?
  email          String?
  files_received Int       @default(0)
  files_shared   Int       @default(0)
  total_storage  Int       @default(2)
  storage_used   Int       @default(0)
  onboarded_at   DateTime  @default(now())
  auth_session   Session[]
  key            Key[]
  files          File[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Subscription {
  userId                 String    @unique
  stripeCustomerId       String    @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  @@id([userId, stripeCustomerId])
}

model File {
  id          String   @id @unique
  name        String
  size        String
  user_id     String
  uploaded_at DateTime @default(now())
  is_private  Boolean
  password    String?
  user        User     @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}
